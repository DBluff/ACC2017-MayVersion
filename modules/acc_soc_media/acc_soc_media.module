<?php
function acc_soc_media_cron()
{
    $tableCheck = db_query('SELECT * FROM soc_media;');
    $number_of_rows = $tableCheck->rowCount();
    if ($number_of_rows < 6) {
        $falseStart = db_insert('soc_media')
            ->fields(array(
                'sid' => 1,
                'embed' => 'placeholder text',
                'type' => 'instatwit',
                'imgurl' => 'placeholderUrl',
                'twittext' => 'Placeholder Tweet',
            ))
            ->execute();
        $falseStart = db_insert('soc_media')
            ->fields(array(
                'sid' => 2,
                'embed' => 'placeholder text',
                'type' => 'instatwit',
                'imgurl' => 'placeholderUrl',
                'twittext' => 'Placeholder Tweet',
            ))
            ->execute();
        $falseStart = db_insert('soc_media')
            ->fields(array(
                'sid' => 3,
                'embed' => 'placeholder text',
                'type' => 'instatwit',
                'imgurl' => 'placeholderUrl',
                'twittext' => 'Placeholder Tweet',
            ))
            ->execute();
        $falseStart = db_insert('soc_media')
            ->fields(array(
                'sid' => 4,
                'embed' => 'placeholder text',
                'type' => 'instatwit',
                'imgurl' => 'placeholderUrl',
                'twittext' => 'Placeholder Tweet',
            ))
            ->execute();
        $falseStart = db_insert('soc_media')
            ->fields(array(
                'sid' => 5,
                'embed' => 'placeholder text',
                'type' => 'instatwit',
                'imgurl' => 'placeholderUrl',
                'twittext' => 'Placeholder Tweet',
            ))
            ->execute();
        $falseStart = db_insert('soc_media')
            ->fields(array(
                'sid' => 6,
                'embed' => 'placeholder text',
                'type' => 'instatwit',
                'imgurl' => 'placeholderUrl',
                'twittext' => 'Placeholder Tweet',
            ))
            ->execute();
    }
    else {
        $curlB = curl_init();
        curl_setopt_array($curlB, array(
            CURLOPT_URL => "https://api.instagram.com/v1/users/self/media/recent/?count=4&access_token=448051566.3cf8e05.f42eb9e13dd542ddb620e0f6014ff340",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "GET",
            CURLOPT_HTTPHEADER => array(
                "accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
                "accept-encoding: gzip, deflate, sdch, br",
                "accept-language: en-US,en;q=0.8",
                "cache-control: no-cache",
                "cookie: mid=WG6VpQAEAAFx2K9IYOSsGyHG7X-x; fbm_124024574287414=base_domain=.instagram.com; _js_datr=wXXeWHjG-_sNHlJnME2vYiPC; _js_reg_ext_ref=http%3A%2F%2Fhelp.instagram.com; _js_reg_fb_ref=https%3A%2F%2Fwww.facebook.com%2Fhelp%2Finstagram%2F513918941996087; _js_reg_fb_gate=https%3A%2F%2Fwww.facebook.com%2Fhelp%2Finstagram%2F513918941996087; wd=1280x918; fbsr_124024574287414=zcBpaeHID_Vxqmo0qbyPv8ydmZ5gVHJ3KOez7fE_09o.eyJhbGdvcml0aG0iOiJITUFDLVNIQTI1NiIsImNvZGUiOiJBUUJzQnh3RUpKWlNCMkpINFZwb1J1QmFFeWdHM3E0aDY5U25sdUdiSlhFV1ljN2x5d296bmxOS2xudm5fVHJITnFVMzctOE9Bdk9tX2NLS2V2cWNzZFN1dEJzQXQ4R2FZRVNESGxhWW9QWGU2UnZFa3BHdDZlX3pHTjQ0U0M3enRxVld3Q3JxRzhrZUxFYlh4OXJlaC0tbm5odUxYOHI5RHpVMmM5V1NVZnBtcE9ubjl2alhNQ3hGUFcxNnBzNFd3SmZ5ME9GQ0E4aUw3eThfQXJ1elJyalVJWjJleUZsenN1cWdCYjBzM3RZZm9oeVJOZlFQaC14SnNSS1AxemM2QkxhbXRkamJfUU9KZzU5LTE0RGg5b21ybWZaeVNKcVdyX1UtRkZwcUZUdFl2eWlRTE9tWGNzQ2FLeDN0UkJRNFJ0ODhYWld4bk44cnBYeVNpbi1pMjhDTCIsImlzc3VlZF9hdCI6MTQ5MDk3NzAzMywidXNlcl9pZCI6IjEwMjY2ODMzODAifQ; s_network=\"\"; rur=ASH; csrftoken=o4pGg25PCdyrKeLPDnhqPTmGABA9zKrN",
                "postman-token: e105fd18-d5d0-38f7-c6b1-932afa5cf487",
                "upgrade-insecure-requests: 1",
                "user-agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36"
            ),
        ));
        $responseB = curl_exec($curlB);
        $errB = curl_error($curlB);
        curl_close($curlB);
        if ($errB) {
            echo "cURL Error #:" . $errB;
        } else {
            $reLinks = '/(?<=link\"\:\ \")(.*)(?=\")/U';
            $reB1 = '/(?:jpg\"\}\,\ \"standard\_resolution\"\:\ \{\"url\"\:\ \")(.*)(?:\"\,)/U';
            $reB2 = '/(?:jpg\"\}\,\ \"standard\_resolution\"\:\ \{\"\w*\"\:\ ...\,\ \"url\"\:\ \")(.*)(?:\"\,)/U';
            $reB3 = '/(?:jpg\"\}\,\ \"standard_resolution\"\:\ \{\"\w*\"\:\ \d*\, \"\w*\"\:\ \d*\,\ \"url\"\:\ \")(.*)(?:\")/U';
            preg_match_all($reB1, $responseB, $urls1, PREG_SET_ORDER, 0);
            preg_match_all($reB2, $responseB, $urls2, PREG_SET_ORDER, 0);
            preg_match_all($reB3, $responseB, $urls3, PREG_SET_ORDER, 0);
            preg_match_all($reLinks, $responseB, $instaLink, PREG_SET_ORDER, 0);
            $instaEmbed = array();
            $instaEmbed[] = 'https://api.instagram.com/oembed/?url=' . $instaLink[0][0];
            $instaEmbed[] = 'https://api.instagram.com/oembed/?url=' . $instaLink[1][0];
            $instaEmbed[] = 'https://api.instagram.com/oembed/?url=' . $instaLink[2][0];
            $instaEmbed[] = 'https://api.instagram.com/oembed/?url=' . $instaLink[3][0];
            $instaModal = array();
            foreach ($instaEmbed as $embed) {
                $curlE = curl_init();
                curl_setopt_array($curlE, array(
                    CURLOPT_URL => $embed,
                    CURLOPT_RETURNTRANSFER => true,
                    CURLOPT_ENCODING => "",
                    CURLOPT_MAXREDIRS => 10,
                    CURLOPT_TIMEOUT => 30,
                    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                    CURLOPT_CUSTOMREQUEST => "GET",
                    CURLOPT_HTTPHEADER => array(
                        "cache-control: no-cache",
                        "postman-token: 1a7e1c7d-ec57-a5f3-99cc-9ddc8ccf8781"
                    ),
                ));
                $responseE = curl_exec($curlE);
                $finalInst = json_decode($responseE);
                $errE = curl_error($curlE);
                curl_close($curlE);
                if ($errE) {
                    echo "cURL Error #:" . $errE;
                } else if (isset($finalInst->html)){
                    $instaModal[] = preg_replace('/[^(\x20-\x7F)]*/','', $finalInst->html);
                }
            }
            $instaImage = array();
            if (count($urls1 === 4)) {
                foreach ($urls1 as $urlDisplay) {
                    $instaImage[] = $urlDisplay[1];
                }
            }
            if (count($urls2 === 4)) {
                foreach ($urls2 as $urlDisplay) {
                    $instaImage[] = $urlDisplay[1];
                }
            }
            if (count($urls3 === 4)) {
                foreach ($urls3 as $urlDisplay) {
                    $instaImage[] = $urlDisplay[1];
                }
            }
        }
        $rowCount = 0;
        $dbLine = 1;
        foreach ($instaImage as $insta) {
            $newPost = db_update('soc_media')
                ->fields(array(
                    'embed' => $instaModal[$rowCount],
                    'type' => 'instagram',
                    'imgurl' => $insta,
                ))
                ->condition('sid', $dbLine, '=')
                ->execute();
            $rowCount++;
            $dbLine++;
        }
        //Twitter cURL
        $token = '19037373-BzfsGB6g25Zj5wZrQ5yYfBFV1tgPjh2IdLjbjCjiv';
        $token_secret = '45I5EMHoXwCx9nyH8HqPcXX1COaBHPQWRSRgE0HGGcVL0';
        $consumer_key = 'MYewU6yKLm69fOSmzLg0PIjv4';
        $consumer_secret = 'wvFJ2urJy41nH3BcAxlLh1aYkufPaCfFoeUcEwHUoUuNwawJIz';
        $host = 'api.twitter.com';
        $method = 'GET';
        $path = '/1.1/statuses/user_timeline.json';
        $query = array(
            'user_id' => '19037373',
            'count' => '2'
        );
        $oauth = array(
            'oauth_consumer_key' => $consumer_key,
            'oauth_token' => $token,
            'oauth_nonce' => (string)mt_rand(),
            'oauth_timestamp' => time(),
            'oauth_signature_method' => 'HMAC-SHA1',
            'oauth_version' => '1.0'
        );
        $oauth = array_map("rawurlencode", $oauth);
        $query = array_map("rawurlencode", $query);
        $arr = array_merge($oauth, $query);
        asort($arr);
        ksort($arr);
        $querystring = urldecode(http_build_query($arr, '', '&'));
        $url = "https://$host$path";
        $base_string = $method . "&" . rawurlencode($url) . "&" . rawurlencode($querystring);
        $key = rawurlencode($consumer_secret) . "&" . rawurlencode($token_secret);
        $signature = rawurlencode(base64_encode(hash_hmac('sha1', $base_string, $key, true)));
        $url .= "?" . http_build_query($query);
        $url = str_replace("&amp;", "&", $url);
        $oauth['oauth_signature'] = $signature;
        ksort($oauth);
        function add_quotes($str)
        {
            return '"' . $str . '"';
        }

        $oauth = array_map("add_quotes", $oauth);
        $auth = "OAuth " . urldecode(http_build_query($oauth, '', ', '));
        $options = array(CURLOPT_HTTPHEADER => array("Authorization: $auth"),
            CURLOPT_HEADER => false,
            CURLOPT_URL => $url,
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_SSL_VERIFYPEER => false);
        $feed = curl_init();
        curl_setopt_array($feed, $options);
        $json = curl_exec($feed);
        curl_close($feed);
        $twitter_data = json_decode($json);
        $twitText = array();
        $twitUrl = array();
        foreach ($twitter_data as $twit) {
            if ($twit->text) {
                $twitText[] = $twit->text;
            }
            if ($twit->id_str) {
                $twitUrl[] = $twit->id_str;
            }
        }
        $twitEmbeds = array();
        $twitModal = array();
        foreach ($twitUrl as $twitUrls) {
            $twitEmbeds[] = "https://publish.twitter.com/oembed?url=" . urlencode("https://twitter.com/Interior/status/") . $twitUrls;
        }
        foreach ($twitEmbeds as $twitEmbed) {
            $curlF = curl_init();
            curl_setopt_array($curlF, array(
                CURLOPT_URL => $twitEmbed,
                CURLOPT_RETURNTRANSFER => true,
                CURLOPT_ENCODING => "",
                CURLOPT_MAXREDIRS => 10,
                CURLOPT_TIMEOUT => 30,
                CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                CURLOPT_CUSTOMREQUEST => "GET",
                CURLOPT_HTTPHEADER => array(
                    "cache-control: no-cache",
                    "postman-token: 1a7e1c7d-ec57-a5f3-99cc-9ddc8ccf8781"
                ),
            ));
            $responseF = curl_exec($curlF);
            $finalTwit = json_decode($responseF);
            $errF = curl_error($curlF);
            curl_close($curlF);
            if ($errF) {
                echo "cURL Error #:" . $errF;
            } else {
                $twitModal[] = preg_replace('/[^(\x20-\x7F)]*/','', $finalTwit->html);
            }
        }
        $rowCount = 0;
        $dbLine = 5;
        foreach ($twitModal as $twit) {
            $newPost = db_update('soc_media')
                ->fields(array(
                    'embed' => $twit,
                    'type' => 'twitter',
                    'twittext' => $twitText[$rowCount],
                ))
                ->condition('sid', $dbLine, '=')
                ->execute();
            $rowCount++;
            $dbLine++;
        }
    }
}